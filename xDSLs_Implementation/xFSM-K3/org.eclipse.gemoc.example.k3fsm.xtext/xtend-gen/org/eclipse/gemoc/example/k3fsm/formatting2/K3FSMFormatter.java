/**
 * generated by Xtext 2.12.0
 */
package org.eclipse.gemoc.example.k3fsm.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.gemoc.example.k3fsm.FSM;
import org.eclipse.gemoc.example.k3fsm.State;
import org.eclipse.gemoc.example.k3fsm.Transition;
import org.eclipse.gemoc.example.k3fsm.services.K3FSMGrammarAccess;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class K3FSMFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private K3FSMGrammarAccess _k3FSMGrammarAccess;
  
  protected void _format(final FSM fSM, @Extension final IFormattableDocument document) {
    EList<State> _ownedStates = fSM.getOwnedStates();
    for (final State state : _ownedStates) {
      document.<State>format(state);
    }
  }
  
  protected void _format(final State state, @Extension final IFormattableDocument document) {
    EList<Transition> _outgoingTransitions = state.getOutgoingTransitions();
    for (final Transition transition : _outgoingTransitions) {
      document.<Transition>format(transition);
    }
  }
  
  public void format(final Object fSM, final IFormattableDocument document) {
    if (fSM instanceof XtextResource) {
      _format((XtextResource)fSM, document);
      return;
    } else if (fSM instanceof FSM) {
      _format((FSM)fSM, document);
      return;
    } else if (fSM instanceof State) {
      _format((State)fSM, document);
      return;
    } else if (fSM instanceof EObject) {
      _format((EObject)fSM, document);
      return;
    } else if (fSM == null) {
      _format((Void)null, document);
      return;
    } else if (fSM != null) {
      _format(fSM, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(fSM, document).toString());
    }
  }
}
